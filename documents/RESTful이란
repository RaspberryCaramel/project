<RESTful>

***Restful web 환경***

1. REST -> 네트워크 아키텍처 원리의 모음
	HTTP를 100% 사용하기 위해 고안된 형태
	로이 필딩(Roy Fielding)의 REST원리를 따르는 시스템을 		RESTful이라 부른다.
	

2. REST 아키텍처의 조건 //위키설명

    1) 클라이언트/서버 구조: 일관적인 인터페이스로 분리되어야 한다
    2) 무상태(Stateless): 각 요청 간 클라이언트의 콘텍스트가 서버에 저장되어서는 안 된다
    3) 캐시 처리 가능(Cacheable): WWW에서와 같이 클라이언트는 응답을 캐싱할 수 있어야 한다.
       * 잘 관리되는 캐싱은 클라이언트-서버 간 상호작용을 부분적으로 또는 완전하게 제거하여 scalability와 성능을 향상시킨다.
    4) 계층화(Layered System): 클라이언트는 보통 대상 서버에 직접 연결되었는지, 또는 중간 서버를 통해 연결되었는지를 알 수 없다. 중간 서버는 로드 밸런싱 기능이나 공유 캐시 기능을 제공함으로써 시스템 규모 확장성을 향상시키는 데 유용하다.
    5) Code on demand (optional) - 자바 애플릿이나 자바스크립트의 제공을 통해 서버가 클라이언트가 실행시킬 수 있는 로직을 전송하여 기능을 확장시킬 수 있다.
    6) 인터페이스 일관성: 아키텍처를 단순화시키고 작은 단위로 분리(decouple)함으로써 클라이언트-서버의 각 파트가 독립적으로 개선될 수 있도록 해준다.

3. REST의 구성

	1)Resource : 자원 => HTTP URI
		각각의 Unique한 URI
	2)Action	 : 행위 => HTTP Method
		
	3)Message	 : 행위의 내용 => HTTP Message Pay Load

4. 우리에게 필요한 RESTful 웹 환경

	*** CRUD : create, retrieve, update, delete
	1) Http Method를 통한 Resource에 대한 CRUD구현
		POST		: create
		GET			: select
		PUT			: create or update
		DELETE		: delete
		OPTION		: available method 
		
		
***고강태강사님 pdf 중 Rest_overview.pdf 참고
